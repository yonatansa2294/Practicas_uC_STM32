/*
 * API_delay.c
 *
 *  Created on: 7 set. 2022
 *      Author: jonatan
 */


#include "API_delay.h"

/* structure initialization routine */
void delayInit( delay_t * delay, tick_t duration )
{
	if(delay != NULL && duration > 0 && duration < MAX_DELAY)	// verification of parameters
	{
		delay->running = false; 	// Initialize flag running
		delay->duration = duration;	// Load the initial value of the delay
	}

}

/* routine to check if the expected time has elapsed */
bool_t delayRead( delay_t * delay )
{
	bool toggleLed = false;	//flag to indicated when the led is to be toggle

	/* check flag status to start delay calculation */
	if(delay->running == false)
	{
		delay->startTime = HAL_GetTick();	//initial timestamp
		delay->running = true;				// update flag running
	}
	else
	{
		/* check if the delay duration has been met */
		if((HAL_GetTick()-delay->startTime)>= delay->duration)
		{
			delay->running = false;	//reset flag of start
			toggleLed = true;	//returns true if the time has expired
		}
	}

	return toggleLed;

		//return (HAL_GetTick()-delay->startTime)>= delay->duration ? true: false;
}

/* routine to modify the duration of the delay in the structure */
void delayWrite( delay_t * delay, tick_t duration )
{
	delay->duration = duration;
}

